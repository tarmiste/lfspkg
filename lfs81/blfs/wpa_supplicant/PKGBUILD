# Maintainer: tba
# THIS PKGBUILD IS AN UNTESTED PROTOTYPE.  USE AT OWN RISK
#
# EDITHOOK1
#

BLFSTOOLSEQ=344
pkgname=wpa_supplicant
pkgver=2.6
pkgrel=1
# EDITHOOK2
pkgdesc=""
arch=('x86_64')
# EDITHOOK3
url=""
license=('GPL')
groups=()
# EDITHOOK4
depends=()
makedepends=()
optdepends=()
provides=()
conflicts=()
replaces=()
backup=()
options=()
install=
changelog=
# EDITHOOK5
source=( 
    https://w1.fi/releases/wpa_supplicant-2.6.tar.gz
    http://anduin.linuxfromscratch.org/BLFS/blfs-bootscripts/blfs-bootscripts-20170731.tar.xz
)
# EDITHOOK6
noextract=()
# EDITHOOK7

md5sums=('091569eb4440b7d7f2b4276dbfc03c3c'
         'feeffb543c42d3a9790d4e77437b57db')

# EDITHOOKPREP
prepare() {
	cd "$pkgname-$pkgver"
	patch -p1 -i "$srcdir/$pkgname-$pkgver.patch"
}

# EDITHOOKBLD
build() {
	cd "$pkgname-$pkgver"
	./configure --prefix=/usr
	make
}

# EDITHOOKCHK
check() {
	cd "$pkgname-$pkgver"
	make -k check
}

# EDITHOOKPKG
package() {
	cd "$pkgname-$pkgver"
	make -j1 DESTDIR="$pkgdir/" install
}
# EDITHOOKC
#######  Building package
cd $UNPACKDIR

cat > wpa_supplicant/.config << "EOF"
CONFIG_BACKEND=file
CONFIG_CTRL_IFACE=y
CONFIG_DEBUG_FILE=y
CONFIG_DEBUG_SYSLOG=y
CONFIG_DEBUG_SYSLOG_FACILITY=LOG_DAEMON
CONFIG_DRIVER_NL80211=y
CONFIG_DRIVER_WEXT=y
CONFIG_DRIVER_WIRED=y
CONFIG_EAP_GTC=y
CONFIG_EAP_LEAP=y
CONFIG_EAP_MD5=y
CONFIG_EAP_MSCHAPV2=y
CONFIG_EAP_OTP=y
CONFIG_EAP_PEAP=y
CONFIG_EAP_TLS=y
CONFIG_EAP_TTLS=y
CONFIG_IEEE8021X_EAPOL=y
CONFIG_IPV6=y
CONFIG_LIBNL32=y
CONFIG_PEERKEY=y
CONFIG_PKCS12=y
CONFIG_READLINE=y
CONFIG_SMARTCARD=y
CONFIG_WPS=y
CFLAGS += -I/usr/include/libnl3
EOF
cat >> wpa_supplicant/.config << "EOF"
CONFIG_CTRL_IFACE_DBUS=y
CONFIG_CTRL_IFACE_DBUS_NEW=y
CONFIG_CTRL_IFACE_DBUS_INTRO=y
EOF
cd wpa_supplicant &&
make BINDIR=/sbin LIBDIR=/lib
pushd wpa_gui-qt4 &&
qmake wpa_gui.pro &&
make &&
popd
sudo -E sh << ROOT_EOF
install -v -m755 wpa_{cli,passphrase,supplicant} ${pkgdir}/sbin/ &&
install -v -m644 doc/docbook/wpa_supplicant.conf.5 ${pkgdir}/usr/share/man/man5/ &&
install -v -m644 doc/docbook/wpa_{cli,passphrase,supplicant}.8 ${pkgdir}/usr/share/man/man8/
ROOT_EOF
sudo -E sh << ROOT_EOF
install -v -m644 dbus/fi.{epitest.hostap.WPASupplicant,w1.wpa_supplicant1}.service \\
                 ${pkgdir}/usr/share/dbus-1/system-services/ &&
install -v -d -m755 ${pkgdir}/etc/dbus-1/system.d &&
install -v -m644 dbus/dbus-wpa_supplicant.conf \\
                 ${pkgdir}/etc/dbus-1/system.d/wpa_supplicant.conf
ROOT_EOF
sudo -E sh << ROOT_EOF
install -v -m755 wpa_gui-qt4/wpa_gui ${pkgdir}/usr/bin/ &&
install -v -m644 doc/docbook/wpa_gui.8 ${pkgdir}/usr/share/man/man8/ &&
install -v -m644 wpa_gui-qt4/wpa_gui.desktop ${pkgdir}/usr/share/applications/ &&
install -v -m644 wpa_gui-qt4/icons/wpa_gui.svg ${pkgdir}/usr/share/pixmaps/
ROOT_EOF
sudo -E sh << ROOT_EOF
update-desktop-database
ROOT_EOF
sudo ${pkgdir}/sbin/ldconfig

sudo -E sh << ROOT_EOF
wpa_passphrase **EDITMESSIDEDITME** **EDITMESECRET_PASSWORDEDITME** > ${pkgdir}/etc/sysconfig/wpa_supplicant-**EDITMEwifi0EDITME**.conf
ROOT_EOF



[[ ! -d $SRC_DIR/blfs-bootscripts ]] && mkdir $SRC_DIR/blfs-bootscripts
pushd $SRC_DIR/blfs-bootscripts
URL=http://anduin.linuxfromscratch.org/BLFS/blfs-bootscripts/blfs-bootscripts-20170731.tar.xz
BOOTPACKG=$(basename $URL)
if [[ ! -f $BOOTPACKG ]] ; then
  if [[ -f $SRC_ARCHIVE/$PKG_DIR/$BOOTPACKG ]] ; then
    cp $SRC_ARCHIVE/$PKG_DIR/$BOOTPACKG $BOOTPACKG
  elif [[ -f $SRC_ARCHIVE/$BOOTPACKG ]] ; then
    cp $SRC_ARCHIVE/$BOOTPACKG $BOOTPACKG
  else
    wget -T 30 -t 5 $URL
    cp $BOOTPACKG $SRC_ARCHIVE
  fi
  rm -f unpacked
fi

if [[ -e unpacked ]] ; then
  BOOTUNPACKDIR=`head -n1 unpacked | sed 's@^./@@;s@/.*@@'`
  if ! [[ -d $BOOTUNPACKDIR ]]; then
    rm unpacked
    tar -xvf $BOOTPACKG > unpacked
    BOOTUNPACKDIR=`head -n1 unpacked | sed 's@^./@@;s@/.*@@'`
  fi
else
  tar -xvf $BOOTPACKG > unpacked
  BOOTUNPACKDIR=`head -n1 unpacked | sed 's@^./@@;s@/.*@@'`
fi
cd $BOOTUNPACKDIR
sudo -E sh << ROOT_EOF
make -j1 install-service-wpa
ROOT_EOF

popd
sudo -E sh << ROOT_EOF
cat > ${pkgdir}/etc/sysconfig/ifconfig.**EDITMEwifi0EDITME** << "EOF"
ONBOOT="yes"
IFACE="**EDITMEwlan0EDITME**"
SERVICE="wpa"

# Additional arguments to wpa_supplicant
WPA_ARGS=""

WPA_SERVICE="dhclient"
DHCP_START=""
DHCP_STOP=""

# Set PRINTIP="yes" to have the script print
# the DHCP assigned IP address
PRINTIP="no"

# Set PRINTALL="yes" to print the DHCP assigned values for
# IP, SM, DG, and 1st NS. This requires PRINTIP="yes".
PRINTALL="no"
EOF
ROOT_EOF

sudo -E sh << ROOT_EOF
cat > ${pkgdir}/etc/sysconfig/ifconfig.**EDITMEwifi0EDITME** << "EOF"
ONBOOT="yes"
IFACE="**EDITMEwlan0EDITME**"
SERVICE="wpa"

# Additional arguments to wpa_supplicant
WPA_ARGS=""

WPA_SERVICE="dhcpcd"
DHCP_START="-b -q **EDITME<insert appropriate start options here>EDITME**"
DHCP_STOP="-k **EDITME<insert additional stop options here>EDITME**"
EOF
ROOT_EOF

sudo -E sh << ROOT_EOF
cat > ${pkgdir}/etc/sysconfig/ifconfig.**EDITMEwifi0EDITME** << "EOF"
ONBOOT="yes"
IFACE="**EDITMEwlan0EDITME**"
SERVICE="wpa"

# Additional arguments to wpa_supplicant
WPA_ARGS=""

WPA_SERVICE="ipv4-static"
IP="192.168.1.1"
GATEWAY="192.168.1.2"
PREFIX="24"
BROADCAST="192.168.1.255"
EOF
ROOT_EOF

sudo -E sh << ROOT_EOF
ifup **EDITMEwifi0EDITME**
ROOT_EOF


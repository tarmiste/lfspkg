# Maintainer: tba
# THIS PKGBUILD IS AN UNTESTED PROTOTYPE.  USE AT OWN RISK
#
# EDITHOOK1
#

BLFSTOOLSEQ=084
pkgname=linux-pam
pkgver=1.3.0
pkgrel=1
# EDITHOOK2
pkgdesc=""
arch=('x86_64')
# EDITHOOK3
url=""
license=('GPL')
groups=()
# EDITHOOK4
depends=()
makedepends=()
optdepends=()
provides=()
conflicts=()
replaces=()
backup=()
options=()
install=
changelog=
# EDITHOOK5
source=(
    http://linux-pam.org/library/Linux-PAM-1.3.0.tar.bz2
    http://linux-pam.org/documentation/Linux-PAM-1.2.0-docs.tar.bz2
)
# EDITHOOK6
noextract=()
# EDITHOOK7

md5sums=('da4b2289b7cfb19583d54e9eaaef1c3a'
         '558378b8be9b8b5c987326f4529f2130')

# EDITHOOKPREP
prepare() {
	cd "$pkgname-$pkgver"
	patch -p1 -i "$srcdir/$pkgname-$pkgver.patch"
}

# EDITHOOKBLD
build() {
	cd "$pkgname-$pkgver"
	./configure --prefix=/usr
	make
}

# EDITHOOKCHK
check() {
	cd "$pkgname-$pkgver"
	make -k check
}

# EDITHOOKPKG
package() {
	cd "$pkgname-$pkgver"
	make -j1 DESTDIR="$pkgdir/" install
}
# EDITHOOKC
#######  Building package
cd $UNPACKDIR

tar -xf ../Linux-PAM-1.2.0-docs.tar.bz2 --strip-components=1
./configure --prefix=/usr                    \
            --sysconfdir=/etc                \
            --libdir=/usr/lib                \
            --disable-regenerate-docu        \
            --enable-securedir=/lib/security \
            --docdir=/usr/share/doc/Linux-PAM-1.3.0 &&
make
sudo -E sh << ROOT_EOF
install -v -m755 -d ${pkgdir}/etc/pam.d &&

cat > ${pkgdir}/etc/pam.d/other << "EOF"
auth     required       pam_deny.so
account  required       pam_deny.so
password required       pam_deny.so
session  required       pam_deny.so
EOF
ROOT_EOF
#make -k check || true
sudo -E sh << ROOT_EOF
rm -fv ${pkgdir}/etc/pam.d/*
ROOT_EOF
sudo -E sh << ROOT_EOF
make -j1 install &&
chmod -v 4755 ${pkgdir}/sbin/unix_chkpwd &&

for file in pam pam_misc pamc
do
  mv -v ${pkgdir}/usr/lib/lib\${file}.so.* /lib &&
  ln -sfv ../../lib/\$(readlink ${pkgdir}/usr/lib/lib\${file}.so) /usr/lib/lib\${file}.so
done
ROOT_EOF
sudo ${pkgdir}/sbin/ldconfig


sudo -E sh << ROOT_EOF
install -vdm755 ${pkgdir}/etc/pam.d &&
cat > ${pkgdir}/etc/pam.d/system-account << "EOF" &&
# Begin ${pkgdir}/etc/pam.d/system-account

account   required    pam_unix.so

# End ${pkgdir}/etc/pam.d/system-account
EOF

cat > ${pkgdir}/etc/pam.d/system-auth << "EOF" &&
# Begin ${pkgdir}/etc/pam.d/system-auth

auth      required    pam_unix.so

# End ${pkgdir}/etc/pam.d/system-auth
EOF

cat > ${pkgdir}/etc/pam.d/system-session << "EOF"
# Begin ${pkgdir}/etc/pam.d/system-session

session   required    pam_unix.so

# End ${pkgdir}/etc/pam.d/system-session
EOF
ROOT_EOF

sudo -E sh << ROOT_EOF
cat > ${pkgdir}/etc/pam.d/system-password << "EOF"
# Begin ${pkgdir}/etc/pam.d/system-password

# check new passwords for strength (man pam_cracklib)
password  required    pam_cracklib.so   type=Linux retry=3 difok=5 \\
                                        difignore=23 minlen=9 dcredit=1 \\
                                        ucredit=1 lcredit=1 ocredit=1 \\
                                        dictpath=/lib/cracklib/pw_dict
# use sha512 hash for encryption, use shadow, and use the
# authentication token (chosen password) set by pam_cracklib
# above (or any previous modules)
password  required    pam_unix.so       sha512 shadow use_authtok

# End ${pkgdir}/etc/pam.d/system-password
EOF
ROOT_EOF

sudo -E sh << ROOT_EOF
cat > ${pkgdir}/etc/pam.d/system-password << "EOF"
# Begin ${pkgdir}/etc/pam.d/system-password

# use sha512 hash for encryption, use shadow, and try to use any previously
# defined authentication token (chosen password) set by any prior module
password  required    pam_unix.so       sha512 shadow try_first_pass

# End ${pkgdir}/etc/pam.d/system-password
EOF
ROOT_EOF

sudo -E sh << ROOT_EOF
cat > ${pkgdir}/etc/pam.d/other << "EOF"
# Begin ${pkgdir}/etc/pam.d/other

auth        required        pam_warn.so
auth        required        pam_deny.so
account     required        pam_warn.so
account     required        pam_deny.so
password    required        pam_warn.so
password    required        pam_deny.so
session     required        pam_warn.so
session     required        pam_deny.so

# End ${pkgdir}/etc/pam.d/other
EOF
ROOT_EOF


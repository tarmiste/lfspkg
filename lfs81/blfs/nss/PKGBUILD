# Maintainer: tba
# THIS PKGBUILD IS AN UNTESTED PROTOTYPE.  USE AT OWN RISK
#
# EDITHOOK1
#

BLFSTOOLSEQ=107
pkgname=nss
pkgver=3.32
pkgrel=1
# EDITHOOK2
pkgdesc=""
arch=('x86_64')
# EDITHOOK3
url=""
license=('GPL')
groups=()
# EDITHOOK4
depends=()
makedepends=()
optdepends=()
provides=()
conflicts=()
replaces=()
backup=()
options=()
install=
changelog=
# EDITHOOK5
source=(
    https://archive.mozilla.org/pub/security/nss/releases/NSS_3_32_RTM/src/nss-3.32.tar.gz
nss-3.32-standalone-1.patch
)
# EDITHOOK6
noextract=()
# EDITHOOK7

md5sums=('076abf8ed88b6bb28f3396b072d252ed'
         'b82eb6b3b36640a85c07014dceaef15d')

# EDITHOOKPREP
prepare() {
	cd "$pkgname-$pkgver"
	patch -p1 -i "$srcdir/$pkgname-$pkgver.patch"
}

# EDITHOOKBLD
build() {
	cd "$pkgname-$pkgver"
	./configure --prefix=/usr
	make
}

# EDITHOOKCHK
check() {
	cd "$pkgname-$pkgver"
	make -k check
}

# EDITHOOKPKG
package() {
	cd "$pkgname-$pkgver"
	make -j1 DESTDIR="$pkgdir/" install
}
# EDITHOOKC
#######  Building package
cd $UNPACKDIR

patch -Np1 -i ../nss-3.32-standalone-1.patch &&

cd nss &&

make -j1 BUILD_OPT=1                  \
  NSPR_INCLUDE_DIR=/usr/include/nspr  \
  USE_SYSTEM_ZLIB=1                   \
  ZLIB_LIBS=-lz                       \
  NSS_ENABLE_WERROR=0                 \
  $([ $(uname -m) = x86_64 ] && echo USE_64=1) \
  $([ -f ${pkgdir}/usr/include/sqlite3.h ] && echo NSS_USE_SYSTEM_SQLITE=1)
sudo -E sh << ROOT_EOF
cd ../dist                                                          &&

install -v -m755 Linux*/lib/*.so              ${pkgdir}/usr/lib              &&
install -v -m644 Linux*/lib/{*.chk,libcrmf.a} ${pkgdir}/usr/lib              &&

install -v -m755 -d                           ${pkgdir}/usr/include/nss      &&
cp -v -RL {public,private}/nss/*              ${pkgdir}/usr/include/nss      &&
chmod -v 644                                  ${pkgdir}/usr/include/nss/*    &&

install -v -m755 Linux*/bin/{certutil,nss-config,pk12util} ${pkgdir}/usr/bin &&

install -v -m644 Linux*/lib/pkgconfig/nss.pc  ${pkgdir}/usr/lib/pkgconfig
ROOT_EOF
sudo ${pkgdir}/sbin/ldconfig

sudo -E sh << ROOT_EOF
if [ -e ${pkgdir}/usr/lib/libp11-kit.so ]; then
  readlink ${pkgdir}/usr/lib/libnssckbi.so ||
  rm -v ${pkgdir}/usr/lib/libnssckbi.so    &&
  ln -sfv ./pkcs11/p11-kit-trust.so ${pkgdir}/usr/lib/libnssckbi.so
fi
ROOT_EOF


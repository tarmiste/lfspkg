# Maintainer: tba
# THIS PKGBUILD IS AN UNTESTED PROTOTYPE.  USE AT OWN RISK
#
# EDITHOOK1
#

BLFSTOOLSEQ=219
pkgname=libpaper
pkgver=1.1.24+nmu5
pkgrel=1
# EDITHOOK2
pkgdesc=""
arch=('x86_64')
# EDITHOOK3
url=""
license=('GPL')
groups=()
# EDITHOOK4
depends=()
makedepends=()
optdepends=()
provides=()
conflicts=()
replaces=()
backup=()
options=()
install=
changelog=
# EDITHOOK5
source=(
    http://ftp.debian.org/debian/pool/main/libp/libpaper/libpaper_1.1.24+nmu5.tar.gz
)
# EDITHOOK6
noextract=()
# EDITHOOK7

md5sums=('38bc55688c0fc5544edaa5a951a45fbd')

# EDITHOOKPREP
prepare() {
	cd "$pkgname-$pkgver"
	patch -p1 -i "$srcdir/$pkgname-$pkgver.patch"
}

# EDITHOOKBLD
build() {
	cd "$pkgname-$pkgver"
	./configure --prefix=/usr
	make
}

# EDITHOOKCHK
check() {
	cd "$pkgname-$pkgver"
	make -k check
}

# EDITHOOKPKG
package() {
	cd "$pkgname-$pkgver"
	make -j1 DESTDIR="$pkgdir/" install
}
# EDITHOOKC
#######  Building package
cd $UNPACKDIR

autoreconf -fi                &&
./configure --prefix=/usr     \
            --sysconfdir=/etc \
            --disable-static &&
make
sudo -E sh << ROOT_EOF
make -j1 install &&
mkdir -vp ${pkgdir}/etc/libpaper.d &&

cat > ${pkgdir}/usr/bin/run-parts << "EOF"
#!/bin/sh
# run-parts:  Runs all the scripts found in a directory.
# from Slackware, by Patrick J. Volkerding with ideas borrowed
# from the Red Hat and Debian versions of this utility.

# keep going when something fails
set +e

if [ \$# -lt 1 ]; then
  echo "Usage: run-parts <directory>"
  exit 1
fi

if [ ! -d \$1 ]; then
  echo "Not a directory: \$1"
  echo "Usage: run-parts <directory>"
  exit 1
fi

# There are several types of files that we would like to
# ignore automatically, as they are likely to be backups
# of other scripts:
IGNORE_SUFFIXES="~ ^ , .bak .new .rpmsave .rpmorig .rpmnew .swp"

# Main loop:
for SCRIPT in \$1/* ; do
  # If this is not a regular file, skip it:
  if [ ! -f \$SCRIPT ]; then
    continue
  fi
  # Determine if this file should be skipped by suffix:
  SKIP=false
  for SUFFIX in \$IGNORE_SUFFIXES ; do
    if [ ! "\$(basename \$SCRIPT \$SUFFIX)" = "\$(basename \$SCRIPT)" ]; then
      SKIP=true
      break
    fi
  done
  if [ "\$SKIP" = "true" ]; then
    continue
  fi
  # If we've made it this far, then run the script if it's executable:
  if [ -x \$SCRIPT ]; then
    \$SCRIPT || echo "\$SCRIPT failed."
  fi
done

exit 0
EOF

chmod -v 755 ${pkgdir}/usr/bin/run-parts
ROOT_EOF
sudo ${pkgdir}/sbin/ldconfig

sudo -E sh << ROOT_EOF
cat > ${pkgdir}/etc/papersize << "EOF"
a4
EOF
ROOT_EOF


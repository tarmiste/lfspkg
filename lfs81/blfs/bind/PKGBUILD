# Maintainer: tba
# THIS PKGBUILD IS AN UNTESTED PROTOTYPE.  USE AT OWN RISK
#
# EDITHOOK1
#

BLFSTOOLSEQ=563
pkgname=bind
pkgver=9.11.2
pkgrel=1
# EDITHOOK2
pkgdesc=""
arch=('x86_64')
# EDITHOOK3
url=""
license=('GPL')
groups=()
# EDITHOOK4
depends=()
makedepends=()
optdepends=()
provides=()
conflicts=()
replaces=()
backup=()
options=()
install=
changelog=
# EDITHOOK5
source=(
    http://anduin.linuxfromscratch.org/BLFS/blfs-bootscripts/blfs-bootscripts-20170731.tar.xz
bind-9.11.2-use_iproute2-1.patch
)
# EDITHOOK6
noextract=()
# EDITHOOK7

md5sums=('feeffb543c42d3a9790d4e77437b57db'
         'dae1b659e4ee8c0e12de652e76048059')

# EDITHOOKPREP
prepare() {
	cd "$pkgname-$pkgver"
	patch -p1 -i "$srcdir/$pkgname-$pkgver.patch"
}

# EDITHOOKBLD
build() {
	cd "$pkgname-$pkgver"
	./configure --prefix=/usr
	make
}

# EDITHOOKCHK
check() {
	cd "$pkgname-$pkgver"
	make -k check
}

# EDITHOOKPKG
package() {
	cd "$pkgname-$pkgver"
	make -j1 DESTDIR="$pkgdir/" install
}
# EDITHOOKC
#######  Building package
cd $UNPACKDIR

patch -Np1 -i ../bind-9.11.2-use_iproute2-1.patch
./configure --prefix=/usr           \
            --sysconfdir=/etc       \
            --localstatedir=/var    \
            --mandir=/usr/share/man \
            --enable-threads        \
            --with-libtool          \
            --disable-static        \
            --with-randomdev=/dev/urandom &&
make
sudo -E sh << ROOT_EOF
bin/tests/system/ifconfig.sh up
ROOT_EOF
make -k check
sudo -E sh << ROOT_EOF
bin/tests/system/ifconfig.sh down
ROOT_EOF
sudo -E sh << ROOT_EOF
make -j1 install &&

install -v -m755 -d ${pkgdir}/usr/share/doc/bind-9.11.2/{arm,misc} &&
install -v -m644    doc/arm/*.html \\
                    ${pkgdir}/usr/share/doc/bind-9.11.2/arm &&
install -v -m644    doc/misc/{dnssec,ipv6,migrat*,options,rfc-compliance,roadmap,sdb} \\
                    ${pkgdir}/usr/share/doc/bind-9.11.2/misc
ROOT_EOF
sudo ${pkgdir}/sbin/ldconfig

sudo -E sh << ROOT_EOF
groupadd -g 20 named &&
useradd -c "BIND Owner" -g named -s ${pkgdir}/bin/false -u 20 named &&
install -d -m770 -o named -g named ${pkgdir}/srv/named
ROOT_EOF

sudo -E sh << ROOT_EOF
mkdir -p ${pkgdir}/srv/named &&
cd       ${pkgdir}/srv/named &&
mkdir -p dev etc/namedb/{slave,pz} usr/lib/engines var/run/named &&
mknod ${pkgdir}/srv/named/dev/null c 1 3 &&
mknod ${pkgdir}/srv/named/dev/urandom c 1 9 &&
chmod 666 ${pkgdir}/srv/named/dev/{null,urandom} &&
cp ${pkgdir}/etc/localtime etc &&
touch ${pkgdir}/srv/named/managed-keys.bind
ROOT_EOF

sudo -E sh << ROOT_EOF
rndc-confgen -r ${pkgdir}/dev/urandom -b 512 > /etc/rndc.conf &&
sed '/conf/d;/^#/!d;s:^# ::' ${pkgdir}/etc/rndc.conf > /srv/named/etc/named.conf
ROOT_EOF

sudo -E sh << ROOT_EOF
cat >> ${pkgdir}/srv/named/etc/named.conf << "EOF"
options {
    directory "/etc/namedb";
    pid-file "/var/run/named.pid";
    statistics-file "/var/run/named.stats";

};
zone "." {
    type hint;
    file "root.hints";
};
zone "0.0.127.in-addr.arpa" {
    type master;
    file "pz/127.0.0";
};

// Bind 9 now logs by default through syslog (except debug).
// These are the default logging rules.

logging {
    category default { default_syslog; default_debug; };
    category unmatched { null; };

  channel default_syslog {
      syslog daemon;                      ${pkgdir}// send to syslog's daemon
                                          ${pkgdir}// facility
      severity info;                      ${pkgdir}// only send priority info
                                          ${pkgdir}// and higher
  };

  channel default_debug {
      file "named.run";                   ${pkgdir}// write to named.run in
                                          ${pkgdir}// the working directory
                                          ${pkgdir}// Note: stderr is used instead
                                          ${pkgdir}// of "named.run"
                                          ${pkgdir}// if the server is started
                                          ${pkgdir}// with the '-f' option.
      severity dynamic;                   ${pkgdir}// log at the server's
                                          ${pkgdir}// current debug level
  };

  channel default_stderr {
      stderr;                             ${pkgdir}// writes to stderr
      severity info;                      ${pkgdir}// only send priority info
                                          ${pkgdir}// and higher
  };

  channel null {
      null;                               ${pkgdir}// toss anything sent to
                                          ${pkgdir}// this channel
  };
};
EOF
ROOT_EOF

sudo -E sh << ROOT_EOF
cat > ${pkgdir}/srv/named/etc/namedb/pz/127.0.0 << "EOF"
\$TTL 3D
@      IN      SOA     ns.local.domain. hostmaster.local.domain. (
                        1       ; Serial
                        8H      ; Refresh
                        2H      ; Retry
                        4W      ; Expire
                        1D)     ; Minimum TTL
                NS      ns.local.domain.
1               PTR     localhost.
EOF
ROOT_EOF

sudo -E sh << ROOT_EOF
cat > ${pkgdir}/srv/named/etc/namedb/root.hints << "EOF"
.                       6D  IN      NS      A.ROOT-SERVERS.NET.
.                       6D  IN      NS      B.ROOT-SERVERS.NET.
.                       6D  IN      NS      C.ROOT-SERVERS.NET.
.                       6D  IN      NS      D.ROOT-SERVERS.NET.
.                       6D  IN      NS      E.ROOT-SERVERS.NET.
.                       6D  IN      NS      F.ROOT-SERVERS.NET.
.                       6D  IN      NS      G.ROOT-SERVERS.NET.
.                       6D  IN      NS      H.ROOT-SERVERS.NET.
.                       6D  IN      NS      I.ROOT-SERVERS.NET.
.                       6D  IN      NS      J.ROOT-SERVERS.NET.
.                       6D  IN      NS      K.ROOT-SERVERS.NET.
.                       6D  IN      NS      L.ROOT-SERVERS.NET.
.                       6D  IN      NS      M.ROOT-SERVERS.NET.
A.ROOT-SERVERS.NET.     6D  IN      A       198.41.0.4
A.ROOT-SERVERS.NET.     6D  IN      AAAA    2001:503:ba3e::2:30
B.ROOT-SERVERS.NET.     6D  IN      A       192.228.79.201
B.ROOT-SERVERS.NET.     6D  IN      AAAA    2001:500:200::b
C.ROOT-SERVERS.NET.     6D  IN      A       192.33.4.12
C.ROOT-SERVERS.NET.     6D  IN      AAAA    2001:500:2::c
D.ROOT-SERVERS.NET.     6D  IN      A       199.7.91.13
D.ROOT-SERVERS.NET.     6D  IN      AAAA    2001:500:2d::d
E.ROOT-SERVERS.NET.     6D  IN      A       192.203.230.10
E.ROOT-SERVERS.NET.     6D  IN      AAAA    2001:500:a8::e
F.ROOT-SERVERS.NET.     6D  IN      A       192.5.5.241
F.ROOT-SERVERS.NET.     6D  IN      AAAA    2001:500:2f::f
G.ROOT-SERVERS.NET.     6D  IN      A       192.112.36.4
G.ROOT-SERVERS.NET.     6D  IN      AAAA    2001:500:12::d0d
H.ROOT-SERVERS.NET.     6D  IN      A       198.97.190.53
H.ROOT-SERVERS.NET.     6D  IN      AAAA    2001:500:1::53
I.ROOT-SERVERS.NET.     6D  IN      A       192.36.148.17
I.ROOT-SERVERS.NET.     6D  IN      AAAA    2001:7fe::53
J.ROOT-SERVERS.NET.     6D  IN      A       192.58.128.30
J.ROOT-SERVERS.NET.     6D  IN      AAAA    2001:503:c27::2:30
K.ROOT-SERVERS.NET.     6D  IN      A       193.0.14.129
K.ROOT-SERVERS.NET.     6D  IN      AAAA    2001:7fd::1
L.ROOT-SERVERS.NET.     6D  IN      A       199.7.83.42
L.ROOT-SERVERS.NET.     6D  IN      AAAA    2001:500:9f::42
M.ROOT-SERVERS.NET.     6D  IN      A       202.12.27.33
M.ROOT-SERVERS.NET.     6D  IN      AAAA    2001:dc3::35
EOF
ROOT_EOF

sudo -E sh << ROOT_EOF
cp ${pkgdir}/etc/resolv.conf /etc/resolv.conf.bak &&
cat > ${pkgdir}/etc/resolv.conf << "EOF"
search **EDITME<yourdomain.com>EDITME**
nameserver 127.0.0.1
EOF
ROOT_EOF

sudo -E sh << ROOT_EOF
chown -R named:named ${pkgdir}/srv/named
ROOT_EOF

[[ ! -d $SRC_DIR/blfs-bootscripts ]] && mkdir $SRC_DIR/blfs-bootscripts
pushd $SRC_DIR/blfs-bootscripts
URL=http://anduin.linuxfromscratch.org/BLFS/blfs-bootscripts/blfs-bootscripts-20170731.tar.xz
BOOTPACKG=$(basename $URL)
if [[ ! -f $BOOTPACKG ]] ; then
  if [[ -f $SRC_ARCHIVE/$PKG_DIR/$BOOTPACKG ]] ; then
    cp $SRC_ARCHIVE/$PKG_DIR/$BOOTPACKG $BOOTPACKG
  elif [[ -f $SRC_ARCHIVE/$BOOTPACKG ]] ; then
    cp $SRC_ARCHIVE/$BOOTPACKG $BOOTPACKG
  else
    wget -T 30 -t 5 $URL
    cp $BOOTPACKG $SRC_ARCHIVE
  fi
  rm -f unpacked
fi

if [[ -e unpacked ]] ; then
  BOOTUNPACKDIR=`head -n1 unpacked | sed 's@^./@@;s@/.*@@'`
  if ! [[ -d $BOOTUNPACKDIR ]]; then
    rm unpacked
    tar -xvf $BOOTPACKG > unpacked
    BOOTUNPACKDIR=`head -n1 unpacked | sed 's@^./@@;s@/.*@@'`
  fi
else
  tar -xvf $BOOTPACKG > unpacked
  BOOTUNPACKDIR=`head -n1 unpacked | sed 's@^./@@;s@/.*@@'`
fi
cd $BOOTUNPACKDIR
sudo -E sh << ROOT_EOF
make -j1 install-bind
ROOT_EOF

popd
sudo -E sh << ROOT_EOF
/etc/rc.d/init.d/bind start
ROOT_EOF

dig -x 127.0.0.1

dig www.linuxfromscratch.org &&
dig www.linuxfromscratch.org


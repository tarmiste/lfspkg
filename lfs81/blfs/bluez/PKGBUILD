# Maintainer: tba
# THIS PKGBUILD IS AN UNTESTED PROTOTYPE.  USE AT OWN RISK
#
# EDITHOOK1
#

BLFSTOOLSEQ=359
pkgname=bluez
pkgver=5.46
pkgrel=1
# EDITHOOK2
pkgdesc=""
arch=('x86_64')
# EDITHOOK3
url=""
license=('GPL')
groups=()
# EDITHOOK4
depends=()
makedepends=()
optdepends=()
provides=()
conflicts=()
replaces=()
backup=()
options=()
install=
changelog=
# EDITHOOK5
source=(
    https://www.kernel.org/pub/linux/bluetooth/bluez-5.46.tar.xz
    http://anduin.linuxfromscratch.org/BLFS/blfs-bootscripts/blfs-bootscripts-20170731.tar.xz
bluez-5.46-obexd_without_systemd-1.patch
)
# EDITHOOK6
noextract=()
# EDITHOOK7

md5sums=('913f35d6fa4ca5772c53adb936bf1947'
         'feeffb543c42d3a9790d4e77437b57db'
         'ed5071c4a89231f23cbb341f533ac1b6')

# EDITHOOKPREP
prepare() {
	cd "$pkgname-$pkgver"
	patch -p1 -i "$srcdir/$pkgname-$pkgver.patch"
}

# EDITHOOKBLD
build() {
	cd "$pkgname-$pkgver"
	./configure --prefix=/usr
	make
}

# EDITHOOKCHK
check() {
	cd "$pkgname-$pkgver"
	make -k check
}

# EDITHOOKPKG
package() {
	cd "$pkgname-$pkgver"
	make -j1 DESTDIR="$pkgdir/" install
}
# EDITHOOKC
#######  Building package
cd $UNPACKDIR

patch -Np1 -i ../bluez-5.46-obexd_without_systemd-1.patch
./configure --prefix=/usr         \
            --sysconfdir=/etc     \
            --localstatedir=/var  \
            --enable-library      \
            --disable-systemd     &&
make
sudo -E sh << ROOT_EOF
make -j1 install &&
ln -svf ../libexec/bluetooth/bluetoothd /usr/sbin
ROOT_EOF
sudo -E sh << ROOT_EOF
install -v -dm755 /etc/bluetooth &&
install -v -m644 src/main.conf /etc/bluetooth/main.conf
ROOT_EOF
sudo -E sh << ROOT_EOF
install -v -dm755 /usr/share/doc/bluez-5.46 &&
install -v -m644 doc/*.txt /usr/share/doc/bluez-5.46
ROOT_EOF
sudo /sbin/ldconfig

sudo -E sh << ROOT_EOF
cat > /etc/bluetooth/rfcomm.conf << "EOF"
# Start rfcomm.conf
# Set up the RFCOMM configuration of the Bluetooth subsystem in the Linux kernel.
# Use one line per command
# See the rfcomm man page for options


# End of rfcomm.conf
EOF
ROOT_EOF

sudo -E sh << ROOT_EOF
cat > /etc/bluetooth/uart.conf << "EOF"
# Start uart.conf
# Attach serial devices via UART HCI to BlueZ stack
# Use one line per device
# See the hciattach man page for options

# End of uart.conf
EOF
ROOT_EOF

[[ ! -d $SRC_DIR/blfs-bootscripts ]] && mkdir $SRC_DIR/blfs-bootscripts
pushd $SRC_DIR/blfs-bootscripts
URL=http://anduin.linuxfromscratch.org/BLFS/blfs-bootscripts/blfs-bootscripts-20170731.tar.xz
BOOTPACKG=$(basename $URL)
if [[ ! -f $BOOTPACKG ]] ; then
  if [[ -f $SRC_ARCHIVE/$PKG_DIR/$BOOTPACKG ]] ; then
    cp $SRC_ARCHIVE/$PKG_DIR/$BOOTPACKG $BOOTPACKG
  elif [[ -f $SRC_ARCHIVE/$BOOTPACKG ]] ; then
    cp $SRC_ARCHIVE/$BOOTPACKG $BOOTPACKG
  else
    wget -T 30 -t 5 $URL
    cp $BOOTPACKG $SRC_ARCHIVE
  fi
  rm -f unpacked
fi

if [[ -e unpacked ]] ; then
  BOOTUNPACKDIR=`head -n1 unpacked | sed 's@^./@@;s@/.*@@'`
  if ! [[ -d $BOOTUNPACKDIR ]]; then
    rm unpacked
    tar -xvf $BOOTPACKG > unpacked
    BOOTUNPACKDIR=`head -n1 unpacked | sed 's@^./@@;s@/.*@@'`
  fi
else
  tar -xvf $BOOTPACKG > unpacked
  BOOTUNPACKDIR=`head -n1 unpacked | sed 's@^./@@;s@/.*@@'`
fi
cd $BOOTUNPACKDIR
sudo -E sh << ROOT_EOF
make -j1 install-bluetooth
ROOT_EOF

popd

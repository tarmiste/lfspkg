# Maintainer: tba
# THIS PKGBUILD IS AN UNTESTED PROTOTYPE.  USE AT OWN RISK
#
# EDITHOOK1
#

BLFSTOOLSEQ=433
pkgname=fop
pkgver=2.2
pkgrel=1
# EDITHOOK2
pkgdesc=""
arch=('x86_64')
# EDITHOOK3
url=""
license=('GPL')
groups=()
# EDITHOOK4
depends=()
makedepends=()
optdepends=()
provides=()
conflicts=()
replaces=()
backup=()
options=()
install=
changelog=
# EDITHOOK5
source=(
    https://archive.apache.org/dist/xmlgraphics/fop/source/fop-2.2-src.tar.gz
    https://downloads.sourceforge.net/offo/2.2/offo-hyphenation.zip
    http://download.java.net/media/jai/builds/release/1_1_3/jai-1_1_3-lib-linux-i586.tar.gz
    http://download.java.net/media/jai/builds/release/1_1_3/jai-1_1_3-lib-linux-amd64.tar.gz
)
# EDITHOOK6
noextract=()
# EDITHOOK7

md5sums=('6d2388bd8851b4883d3258c0afc96895'
         'bf9c09bf05108ef9661b8f08d91c2336'
         'a2cbc155ef3899bcde9c74a8035764b3'
         '4a906db35612f668aeef2c0606d7075b')

# EDITHOOKPREP
prepare() {
	cd "$pkgname-$pkgver"
	patch -p1 -i "$srcdir/$pkgname-$pkgver.patch"
}

# EDITHOOKBLD
build() {
	cd "$pkgname-$pkgver"
	./configure --prefix=/usr
	make
}

# EDITHOOKCHK
check() {
	cd "$pkgname-$pkgver"
	make -k check
}

# EDITHOOKPKG
package() {
	cd "$pkgname-$pkgver"
	make -j1 DESTDIR="$pkgdir/" install
}
# EDITHOOKC
#######  Building package
cd $UNPACKDIR

unzip ../offo-hyphenation.zip &&
cp offo-hyphenation/hyph/* fop/hyph &&
rm -rf offo-hyphenation
sudo -E sh << ROOT_EOF
case \`uname -m\` in
  i?86)
    tar -xf ../jai-1_1_3-lib-linux-i586.tar.gz
    cp -v jai-1_1_3/lib/{jai*,mlibwrapper_jai.jar} \$JAVA_HOME/jre/lib/ext/
    cp -v jai-1_1_3/lib/libmlib_jai.so             \$JAVA_HOME/jre/lib/i386/
    ;;

  x86_64)
    tar -xf ../jai-1_1_3-lib-linux-amd64.tar.gz
    cp -v jai-1_1_3/lib/{jai*,mlibwrapper_jai.jar} \$JAVA_HOME/jre/lib/ext/
    cp -v jai-1_1_3/lib/libmlib_jai.so             \$JAVA_HOME/jre/lib/amd64/
    ;;
esac
ROOT_EOF
sed -i '\@</javad@i\
<arg value="-Xdoclint:none"/>\
<arg value="--allow-script-in-comments"/>' fop/build.xml
sed -e '/hyph\.stack/s/512k/1M/' \
    -i fop/build.xml
cd fop                    &&
export LC_ALL=en_US.UTF-8 &&

ant compile               &&
ant jar-main              &&
ant jar-hyphenation       &&
ant javadocs              &&
mv build/javadocs .
sed -e '/haltonfailure/s/yes/off/' \
    -i build.xml
sudo -E sh << ROOT_EOF
install -v -d -m755 -o root -g root          /opt/fop-2.2 &&
cp -v  ../{KEYS,LICENSE,NOTICE,README}       /opt/fop-2.2 &&
cp -vR build conf examples fop* javadocs lib /opt/fop-2.2 &&
chmod a+x /opt/fop-2.2/fop                                &&

ln -v -sfn fop-2.2 /opt/fop
ROOT_EOF
sudo /sbin/ldconfig

cat > ~/.foprc << "EOF"
FOP_OPTS="-Xmx**EDITME<RAM_Installed>EDITME**m"
FOP_HOME="/opt/fop"
EOF



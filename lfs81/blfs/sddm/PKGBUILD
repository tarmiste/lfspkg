# Maintainer: tba
# THIS PKGBUILD IS AN UNTESTED PROTOTYPE.  USE AT OWN RISK
#
# EDITHOOK1
#

BLFSTOOLSEQ=614
pkgname=sddm
pkgver=0.16.0
pkgrel=1
# EDITHOOK2
pkgdesc=""
arch=('x86_64')
# EDITHOOK3
url=""
license=('GPL')
groups=()
# EDITHOOK4
depends=()
makedepends=()
optdepends=()
provides=()
conflicts=()
replaces=()
backup=()
options=()
install=
changelog=
# EDITHOOK5
source=(
    https://ftp.osuosl.org/pub/blfs/conglomeration/sddm/sddm-0.16.0.tar.xz
    http://anduin.linuxfromscratch.org/BLFS/blfs-bootscripts/blfs-bootscripts-20170731.tar.xz
)
# EDITHOOK6
noextract=()
# EDITHOOK7

md5sums=('b41182cc9d53d75485c112ab82dc95d0'
         'feeffb543c42d3a9790d4e77437b57db')

# EDITHOOKPREP
prepare() {
	cd "$pkgname-$pkgver"
	patch -p1 -i "$srcdir/$pkgname-$pkgver.patch"
}

# EDITHOOKBLD
build() {
	cd "$pkgname-$pkgver"
	./configure --prefix=/usr
	make
}

# EDITHOOKCHK
check() {
	cd "$pkgname-$pkgver"
	make -k check
}

# EDITHOOKPKG
package() {
	cd "$pkgname-$pkgver"
	make -j1 DESTDIR="$pkgdir/" install
}
# EDITHOOKC
#######  Building package
cd $UNPACKDIR

sudo -E sh << ROOT_EOF
groupadd -g 64 sddm &&
useradd  -c "SDDM Daemon" \\
         -d /var/lib/sddm \\
         -u 64 -g sddm    \\
         -s /bin/false sddm
ROOT_EOF
sed -e '/UPOWER_SERVICE)/ s:^://:' \
    -i src/daemon/PowerManager.cpp &&

sed -e '/\$@$/s/exec/& ck-launch-session/' \
    -i data/scripts/Xsession
mkdir build &&
cd    build &&

cmake -DCMAKE_INSTALL_PREFIX=/usr \
      -DCMAKE_BUILD_TYPE=Release  \
      -DENABLE_JOURNALD=OFF       \
      -DDBUS_CONFIG_FILENAME=sddm_org.freedesktop.DisplayManager.conf \
      -Wno-dev .. &&
make
sudo -E sh << ROOT_EOF
make -j1 install &&
install -v -dm755 -o sddm -g sddm /var/lib/sddm
ROOT_EOF
sudo /sbin/ldconfig

sddm --example-config > sddm.example.conf

sudo -E sh << ROOT_EOF
cp -v sddm.example.conf /etc/sddm.conf
ROOT_EOF

sudo -E sh << ROOT_EOF
sed -e '/ServerPath/ s|usr|opt/xorg|' \\
    -i.orig /etc/sddm.conf
ROOT_EOF

sudo -E sh << ROOT_EOF
sed -e 's/-nolisten tcp//'\\
    -i /etc/sddm.conf
ROOT_EOF

sudo -E sh << ROOT_EOF
sed -e 's/\\"none\\"/\\"on\\"/' \\
    -i /etc/sddm.conf
ROOT_EOF

[[ ! -d $SRC_DIR/blfs-bootscripts ]] && mkdir $SRC_DIR/blfs-bootscripts
pushd $SRC_DIR/blfs-bootscripts
URL=http://anduin.linuxfromscratch.org/BLFS/blfs-bootscripts/blfs-bootscripts-20170731.tar.xz
BOOTPACKG=$(basename $URL)
if [[ ! -f $BOOTPACKG ]] ; then
  if [[ -f $SRC_ARCHIVE/$PKG_DIR/$BOOTPACKG ]] ; then
    cp $SRC_ARCHIVE/$PKG_DIR/$BOOTPACKG $BOOTPACKG
  elif [[ -f $SRC_ARCHIVE/$BOOTPACKG ]] ; then
    cp $SRC_ARCHIVE/$BOOTPACKG $BOOTPACKG
  else
    wget -T 30 -t 5 $URL
    cp $BOOTPACKG $SRC_ARCHIVE
  fi
  rm -f unpacked
fi

if [[ -e unpacked ]] ; then
  BOOTUNPACKDIR=`head -n1 unpacked | sed 's@^./@@;s@/.*@@'`
  if ! [[ -d $BOOTUNPACKDIR ]]; then
    rm unpacked
    tar -xvf $BOOTPACKG > unpacked
    BOOTUNPACKDIR=`head -n1 unpacked | sed 's@^./@@;s@/.*@@'`
  fi
else
  tar -xvf $BOOTPACKG > unpacked
  BOOTUNPACKDIR=`head -n1 unpacked | sed 's@^./@@;s@/.*@@'`
fi
cd $BOOTUNPACKDIR
sudo -E sh << ROOT_EOF
make -j1 install-sddm
ROOT_EOF

popd
sudo -E sh << ROOT_EOF
cat > /etc/pam.d/sddm << "EOF"
# Begin /etc/pam.d/sddm

auth     requisite      pam_nologin.so
auth     required       pam_env.so

auth     required       pam_succeed_if.so uid >= 1000 quiet
auth     include        system-auth

account  include        system-account
password include        system-password

session  required       pam_limits.so
session  include        system-session

# End /etc/pam.d/sddm
EOF

cat > /etc/pam.d/sddm-autologin << "EOF"
# Begin /etc/pam.d/sddm-autologin

auth     requisite      pam_nologin.so
auth     required       pam_env.so

auth     required       pam_succeed_if.so uid >= 1000 quiet
auth     required       pam_permit.so

account  include        system-account

password required       pam_deny.so

session  required       pam_limits.so
session  include        system-session

# End /etc/pam.d/sddm-autologin
EOF

cat > /etc/pam.d/sddm-greeter << "EOF"
# Begin /etc/pam.d/sddm-greeter

auth     required       pam_env.so
auth     required       pam_permit.so

account  required       pam_permit.so
password required       pam_deny.so
session  required       pam_unix.so
-session optional       pam_systemd.so

# End /etc/pam.d/sddm-greeter
EOF
ROOT_EOF

sudo -E sh << ROOT_EOF
/etc/rc.d/init.d/sddm start
ROOT_EOF

sudo -E sh << ROOT_EOF
init 5
ROOT_EOF

sudo -E sh << ROOT_EOF
cp -v /etc/inittab{,-orig} &&
sed -i '/initdefault/ s/3/5/' /etc/inittab
ROOT_EOF

sddm-greeter --test-mode --theme **EDITME<theme path>EDITME**

sudo -E sh << ROOT_EOF
echo 'setxkbmap **EDITME"<your keyboard comma separated list>"EDITME**' >> \\
     /usr/share/sddm/scripts/Xsetup
ROOT_EOF

sudo -E sh << ROOT_EOF
echo "source /etc/profile.d/dircolors.sh" >> /etc/bashrc
ROOT_EOF


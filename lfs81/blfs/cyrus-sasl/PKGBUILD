# Maintainer: tba
# THIS PKGBUILD IS AN UNTESTED PROTOTYPE.  USE AT OWN RISK
#
# EDITHOOK1
#

BLFSTOOLSEQ=136
pkgname=cyrus-sasl
pkgver=2.1.26
pkgrel=1
# EDITHOOK2
pkgdesc=""
arch=('x86_64')
# EDITHOOK3
url=""
license=('GPL')
groups=()
# EDITHOOK4
depends=()
makedepends=()
optdepends=()
provides=()
conflicts=()
replaces=()
backup=()
options=()
install=
changelog=
# EDITHOOK5
source=(
    http://anduin.linuxfromscratch.org/BLFS/blfs-bootscripts/blfs-bootscripts-20170731.tar.xz
cyrus-sasl-2.1.26-fixes-3.patch
cyrus-sasl-2.1.26-openssl-1.1.0-1.patch
)
# EDITHOOK6
noextract=()
# EDITHOOK7

md5sums=('feeffb543c42d3a9790d4e77437b57db'
         'f1ca57cf6c46b2e217e86ad04d6da7e7'
         'f3ebd5111a47e13841aaa48ece36bf19')

# EDITHOOKPREP
prepare() {
	cd "$pkgname-$pkgver"
	patch -p1 -i "$srcdir/$pkgname-$pkgver.patch"
}

# EDITHOOKBLD
build() {
	cd "$pkgname-$pkgver"
	./configure --prefix=/usr
	make
}

# EDITHOOKCHK
check() {
	cd "$pkgname-$pkgver"
	make -k check
}

# EDITHOOKPKG
package() {
	cd "$pkgname-$pkgver"
	make -j1 DESTDIR="$pkgdir/" install
}
# EDITHOOKC
#######  Building package
cd $UNPACKDIR

patch -Np1 -i ../cyrus-sasl-2.1.26-fixes-3.patch &&
patch -Np1 -i ../cyrus-sasl-2.1.26-openssl-1.1.0-1.patch &&
autoreconf -fi &&

./configure --prefix=/usr        \
            --sysconfdir=/etc    \
            --enable-auth-sasldb \
            --with-dbpath=/var/lib/sasl/sasldb2 \
            --with-saslauthd=/var/run/saslauthd &&
make
sudo -E sh << ROOT_EOF
make -j1 install &&
install -v -dm755 ${pkgdir}/usr/share/doc/cyrus-sasl-2.1.26 &&
install -v -m644  doc/{*.{html,txt,fig},ONEWS,TODO} \\
    saslauthd/LDAP_SASLAUTHD ${pkgdir}/usr/share/doc/cyrus-sasl-2.1.26 &&
install -v -dm700 ${pkgdir}/var/lib/sasl
ROOT_EOF
sudo ${pkgdir}/sbin/ldconfig

[[ ! -d $SRC_DIR/blfs-bootscripts ]] && mkdir $SRC_DIR/blfs-bootscripts
pushd $SRC_DIR/blfs-bootscripts
URL=http://anduin.linuxfromscratch.org/BLFS/blfs-bootscripts/blfs-bootscripts-20170731.tar.xz
BOOTPACKG=$(basename $URL)
if [[ ! -f $BOOTPACKG ]] ; then
  if [[ -f $SRC_ARCHIVE/$PKG_DIR/$BOOTPACKG ]] ; then
    cp $SRC_ARCHIVE/$PKG_DIR/$BOOTPACKG $BOOTPACKG
  elif [[ -f $SRC_ARCHIVE/$BOOTPACKG ]] ; then
    cp $SRC_ARCHIVE/$BOOTPACKG $BOOTPACKG
  else
    wget -T 30 -t 5 $URL
    cp $BOOTPACKG $SRC_ARCHIVE
  fi
  rm -f unpacked
fi

if [[ -e unpacked ]] ; then
  BOOTUNPACKDIR=`head -n1 unpacked | sed 's@^./@@;s@/.*@@'`
  if ! [[ -d $BOOTUNPACKDIR ]]; then
    rm unpacked
    tar -xvf $BOOTPACKG > unpacked
    BOOTUNPACKDIR=`head -n1 unpacked | sed 's@^./@@;s@/.*@@'`
  fi
else
  tar -xvf $BOOTPACKG > unpacked
  BOOTUNPACKDIR=`head -n1 unpacked | sed 's@^./@@;s@/.*@@'`
fi
cd $BOOTUNPACKDIR
sudo -E sh << ROOT_EOF
make -j1 install-saslauthd
ROOT_EOF

popd

# Maintainer: tba
# THIS PKGBUILD IS AN UNTESTED PROTOTYPE.  USE AT OWN RISK
#
# EDITHOOK1
#

BLFSTOOLSEQ=487
pkgname=ninja
pkgver=1.7.2
pkgrel=1
# EDITHOOK2
pkgdesc=""
arch=('x86_64')
# EDITHOOK3
url=""
license=('GPL')
groups=()
# EDITHOOK4
depends=()
makedepends=()
optdepends=()
provides=()
conflicts=()
replaces=()
backup=()
options=()
install=
changelog=
# EDITHOOK5
source=(
    https://github.com/ninja-build/ninja/archive/v1.7.2/ninja-1.7.2.tar.gz
)
# EDITHOOK6
noextract=()
# EDITHOOK7

md5sums=('7b482218757acbaeac4d4d54a3cd94e1')

# EDITHOOKPREP
prepare() {
	cd "$pkgname-$pkgver"
	patch -p1 -i "$srcdir/$pkgname-$pkgver.patch"
}

# EDITHOOKBLD
build() {
	cd "$pkgname-$pkgver"
	./configure --prefix=/usr
	make
}

# EDITHOOKCHK
check() {
	cd "$pkgname-$pkgver"
	make -k check
}

# EDITHOOKPKG
package() {
	cd "$pkgname-$pkgver"
	make -j1 DESTDIR="$pkgdir/" install
}
# EDITHOOKC
#######  Building package
cd $UNPACKDIR

./configure.py --bootstrap
emacs -Q --batch -f batch-byte-compile misc/ninja-mode.el
./configure.py &&
./ninja ninja_test &&
./ninja_test --gtest_filter=-SubprocessTest.SetWithLots
sudo -E sh << ROOT_EOF
install -vm755 ninja ${pkgdir}/usr/bin/ &&
install -vDm644 misc/ninja.vim \\
                ${pkgdir}/usr/share/vim/vim80/syntax/ninja.vim &&
install -vDm644 misc/bash-completion \\
                ${pkgdir}/usr/share/bash-completion/completions/ninja &&
install -vDm644 misc/zsh-completion \\
                ${pkgdir}/usr/share/zsh/site-functions/_ninja

ROOT_EOF
sudo -E sh << ROOT_EOF
install -vDm644 misc/ninja-mode.el \\
                ${pkgdir}/usr/share/emacs/site-lisp/ninja-mode.el
install -vDm644 misc/ninja-mode.elc \\
                ${pkgdir}/usr/share/emacs/site-lisp/ninja-mode.elc
ROOT_EOF
sudo -E sh << ROOT_EOF
ninja manual &&
install -vDm644 doc/manual.html ${pkgdir}/usr/share/doc/ninja-1.7.2/manual.html
ROOT_EOF
sudo -E sh << ROOT_EOF
ninja doxygen &&
install -vDdm644 doc/doxygen/html/* ${pkgdir}/usr/share/doc/ninja-1.7.2/
ROOT_EOF
sudo ${pkgdir}/sbin/ldconfig


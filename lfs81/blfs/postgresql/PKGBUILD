# Maintainer: tba
# THIS PKGBUILD IS AN UNTESTED PROTOTYPE.  USE AT OWN RISK
#
# EDITHOOK1
#

BLFSTOOLSEQ=135
pkgname=postgresql
pkgver=9.6.4
pkgrel=1
# EDITHOOK2
pkgdesc=""
arch=('x86_64')
# EDITHOOK3
url=""
license=('GPL')
groups=()
# EDITHOOK4
depends=()
makedepends=()
optdepends=()
provides=()
conflicts=()
replaces=()
backup=()
options=()
install=
changelog=
# EDITHOOK5
source=(
    http://ftp.postgresql.org/pub/source/v9.6.4/postgresql-9.6.4.tar.bz2
    http://anduin.linuxfromscratch.org/BLFS/blfs-bootscripts/blfs-bootscripts-20170731.tar.xz
)
# EDITHOOK6
noextract=()
# EDITHOOK7

md5sums=('67b01523a75271fd6cb2638eb2b55795'
         'feeffb543c42d3a9790d4e77437b57db')

# EDITHOOKPREP
prepare() {
	cd "$pkgname-$pkgver"
	patch -p1 -i "$srcdir/$pkgname-$pkgver.patch"
}

# EDITHOOKBLD
build() {
	cd "$pkgname-$pkgver"
	./configure --prefix=/usr
	make
}

# EDITHOOKCHK
check() {
	cd "$pkgname-$pkgver"
	make -k check
}

# EDITHOOKPKG
package() {
	cd "$pkgname-$pkgver"
	make -j1 DESTDIR="$pkgdir/" install
}
# EDITHOOKC
#######  Building package
cd $UNPACKDIR

sed -i '/DEFAULT_PGSOCKET_DIR/s@/tmp@/run/postgresql@' src/include/pg_config_manual.h &&

./configure --prefix=/usr          \
            --enable-thread-safety \
            --docdir=/usr/share/doc/postgresql-9.6.4 &&
make
#make -k check || true
sudo -E sh << ROOT_EOF
make -j1 install      &&
make -j1 install-docs
ROOT_EOF
make -C contrib/**EDITME<SUBDIR-NAME>EDITME** install
sudo -E sh << ROOT_EOF
install -v -dm700 ${pkgdir}/srv/pgsql/data &&
install -v -dm755 ${pkgdir}/run/postgresql &&

groupadd -g 41 postgres &&
useradd -c "PostgreSQL Server" -g postgres -d ${pkgdir}/srv/pgsql/data \\
        -u 41 postgres &&

chown -Rv postgres:postgres ${pkgdir}/srv/pgsql /run/postgresql
ROOT_EOF
sudo -E sh << ROOT_EOF
su - postgres -c '/usr/bin/initdb -D ${pkgdir}/srv/pgsql/data'
ROOT_EOF
sudo -E sh << ROOT_EOF
su - postgres -c '/usr/bin/postgres -D ${pkgdir}/srv/pgsql/data > \\
                  ${pkgdir}/srv/pgsql/data/logfile 2>&1 &'
ROOT_EOF
sudo -E sh << ROOT_EOF
su - postgres -c '/usr/bin/createdb test' &&
echo "create table t1 ( name varchar(20), state_province varchar(20) );" \\
    | (su - postgres -c '/usr/bin/psql test ') &&
echo "insert into t1 values ('Billy', 'NewYork');" \\
    | (su - postgres -c '/usr/bin/psql test ') &&
echo "insert into t1 values ('Evanidus', 'Quebec');" \\
    | (su - postgres -c '/usr/bin/psql test ') &&
echo "insert into t1 values ('Jesse', 'Ontario');" \\
    | (su - postgres -c '/usr/bin/psql test ') &&
echo "select * from t1;" | (su - postgres -c '/usr/bin/psql test')
ROOT_EOF
sudo -E sh << ROOT_EOF
su - postgres -c "/usr/bin/pg_ctl stop -D ${pkgdir}/srv/pgsql/data"
ROOT_EOF
sudo ${pkgdir}/sbin/ldconfig

[[ ! -d $SRC_DIR/blfs-bootscripts ]] && mkdir $SRC_DIR/blfs-bootscripts
pushd $SRC_DIR/blfs-bootscripts
URL=http://anduin.linuxfromscratch.org/BLFS/blfs-bootscripts/blfs-bootscripts-20170731.tar.xz
BOOTPACKG=$(basename $URL)
if [[ ! -f $BOOTPACKG ]] ; then
  if [[ -f $SRC_ARCHIVE/$PKG_DIR/$BOOTPACKG ]] ; then
    cp $SRC_ARCHIVE/$PKG_DIR/$BOOTPACKG $BOOTPACKG
  elif [[ -f $SRC_ARCHIVE/$BOOTPACKG ]] ; then
    cp $SRC_ARCHIVE/$BOOTPACKG $BOOTPACKG
  else
    wget -T 30 -t 5 $URL
    cp $BOOTPACKG $SRC_ARCHIVE
  fi
  rm -f unpacked
fi

if [[ -e unpacked ]] ; then
  BOOTUNPACKDIR=`head -n1 unpacked | sed 's@^./@@;s@/.*@@'`
  if ! [[ -d $BOOTUNPACKDIR ]]; then
    rm unpacked
    tar -xvf $BOOTPACKG > unpacked
    BOOTUNPACKDIR=`head -n1 unpacked | sed 's@^./@@;s@/.*@@'`
  fi
else
  tar -xvf $BOOTPACKG > unpacked
  BOOTUNPACKDIR=`head -n1 unpacked | sed 's@^./@@;s@/.*@@'`
fi
cd $BOOTUNPACKDIR
sudo -E sh << ROOT_EOF
make -j1 install-postgresql
ROOT_EOF

popd

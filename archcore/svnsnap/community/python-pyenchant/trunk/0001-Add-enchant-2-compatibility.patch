From 4ecabbdb345a4f84e97e05abb970e8ca83e6b52e Mon Sep 17 00:00:00 2001
From: Jelle van der Waa <jelle@vdwaa.nl>
Date: Sat, 2 Dec 2017 21:13:42 +0100
Subject: [PATCH] Add enchant 2 compatibility

Remove is_in_session of which the function is removed in Enchant 2.0 and
was already deprecated.
---
 enchant/__init__.py | 9 ---------
 enchant/_enchant.py | 6 ------
 enchant/pypwl.py    | 6 ------
 3 files changed, 21 deletions(-)

diff --git a/enchant/__init__.py b/enchant/__init__.py
index 016d32f..56ecbeb 100644
--- a/enchant/__init__.py
+++ b/enchant/__init__.py
@@ -715,15 +715,6 @@ class Dict(_EnchantObject):
         word = self._StringClass(word)
         return _e.dict_is_removed(self._this,word.encode())
 
-    def is_in_session(self,word):
-        """Check whether a word is in the session list."""
-        warnings.warn("Dict.is_in_session is deprecated, "\
-                      "please use Dict.is_added",
-                      category=DeprecationWarning,stacklevel=2)
-        self._check_this()
-        word = self._StringClass(word)
-        return _e.dict_is_in_session(self._this,word.encode())
-
     def store_replacement(self,mis,cor):
         """Store a replacement spelling for a miss-spelled word.
 
diff --git a/enchant/_enchant.py b/enchant/_enchant.py
index a07058d..cf77908 100644
--- a/enchant/_enchant.py
+++ b/enchant/_enchant.py
@@ -309,12 +309,6 @@ dict_is_removed1.restype = c_int
 def dict_is_removed(dict,word):
     return dict_is_removed1(dict,word,len(word))
 
-dict_is_in_session1 = e.enchant_dict_is_in_session
-dict_is_in_session1.argtypes = [t_dict,c_char_p,c_size_t]
-dict_is_in_session1.restype = c_int
-def dict_is_in_session(dict,word):
-    return dict_is_in_session1(dict,word,len(word))
-
 dict_store_replacement1 = e.enchant_dict_store_replacement
 dict_store_replacement1.argtypes = [t_dict,c_char_p,c_size_t,c_char_p,c_size_t]
 dict_store_replacement1.restype = None
diff --git a/enchant/pypwl.py b/enchant/pypwl.py
index 3a2248f..282c015 100644
--- a/enchant/pypwl.py
+++ b/enchant/pypwl.py
@@ -247,12 +247,6 @@ class PyPWL:
         """Add a word to the session list."""
         self._words.insert(word)
                     
-    def is_in_session(self,word):
-        """Check whether a word is in the session list."""
-        warnings.warn("PyPWL.is_in_session is deprecated, please use PyPWL.is_added",category=DeprecationWarning)
-        # Consider all words to be in the session list
-        return self.check(word)
-    
     def store_replacement(self,mis,cor):
         """Store a replacement spelling for a miss-spelled word.
         
-- 
2.15.1


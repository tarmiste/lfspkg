diff -p -up SYMPOW-1.019/disk.c.orig SYMPOW-1.019/disk.c
--- SYMPOW-1.019/disk.c.orig	2009-09-03 18:20:37.000000000 -0300
+++ SYMPOW-1.019/disk.c	2009-09-03 18:22:08.000000000 -0300
@@ -47,8 +47,8 @@ static int get_params(int which,int sp,i
  while (1)
  {if (!getline0(F,LINE,64))
   {printf("**ERROR** %s not found in param_data file\n",S);
-   if (!HECKE) printf("It can be added with './sympow -new_data %i",sp);
-   else printf("It can be added with './sympow -new_data %i",ep);
+   if (!HECKE) printf("It can be added with 'sympow -new_data %i",sp);
+   else printf("It can be added with 'sympow -new_data %i",ep);
    if ((sp&1) || HECKE) printf("d%i",dv); if ((HECKE) && (sp>1)) printf("h");
    if ((CM_CASE) && ((sp&3)==0)) printf("c"); printf("'\n"); exit(-1);}
   if ((S[0]==LINE[0]) && (S[1]==LINE[1]) && (S[2]==LINE[2]) && (S[3]==LINE[3])
diff -p -up SYMPOW-1.019/generate.c.orig SYMPOW-1.019/generate.c
--- SYMPOW-1.019/generate.c.orig	2009-09-03 18:20:49.000000000 -0300
+++ SYMPOW-1.019/generate.c	2009-09-03 18:22:23.000000000 -0300
@@ -101,9 +101,11 @@ int assure_line(char *STR)
 
 void new_sympow_s1(char *A)
 {procit(A);
- printf("echo 'Removing any old data files'\n"); printf("cd datafiles\n");
- printf("%s -f %s %s %s\n",RM,Mtxt1,Stxt1,Mbin1);
- if (HILO) printf("%s -f %s %s %s\n",RM,Mtxt2,Stxt2,Mbin2); printf("cd ..\n");}
+ printf("if [ -d datafiles ]; then\n");
+ printf("    echo 'Removing any old data files'\n"); printf("    pushd datafiles\n    touch param_data\n");
+ printf("    %s -f %s %s %s\n",RM,Mtxt1,Stxt1,Mbin1);
+ if (HILO) printf("    %s -f %s %s %s\n",RM,Mtxt2,Stxt2,Mbin2); printf("    popd\n");
+ printf("else\n    mkdir datafiles\n    touch datafiles/param_data\nfi\n");}
 
 void new_sympow_pari(char *A)
 {int i; procit(A); pari_params();
@@ -142,10 +144,10 @@ void new_sympow_s2(char *A)
  trimit(Mtxt1); trimit(Stxt1); if (HILO) {trimit(Mtxt2); trimit(Stxt2);}
  printf("echo 'Turning the meshes into binaries'\n");
  printf("NUM=`%s -c AT %s`\n",GREP,Mtxt1);
- printf("../sympow -txt2bin $NUM %s < %s\n",Mbin1,Mtxt1);
+ printf("sympow -txt2bin $NUM %s < %s\n",Mbin1,Mtxt1);
  if (HILO)
  {printf("NUM=`%s -c AT %s`\n",GREP,Mtxt2);
-  printf("../sympow -txt2bin $NUM %s < %s\n",Mbin2,Mtxt2);}
+  printf("sympow -txt2bin $NUM %s < %s\n",Mbin2,Mtxt2);}
  printf("cd ..\n");}
 
 void rewarp_params()
diff -p -up SYMPOW-1.019/new_data.orig SYMPOW-1.019/new_data
--- SYMPOW-1.019/new_data.orig	2009-09-03 18:20:25.000000000 -0300
+++ SYMPOW-1.019/new_data	2009-09-03 18:21:31.000000000 -0300
@@ -1,7 +1,7 @@
 #! /bin/sh
 #
 # This script should not need to be run directly,
-# but will be automatically executed via "./sympow -new_data []"
+# but will be automatically executed via "sympow -new_data []"
 #
 # example direct usages
 # sh new_data /bin/sh /usr/bin/gp '-sp 3 -dv 2'
@@ -18,11 +18,11 @@ echo "Running the new_data script for $3
 
 SH=$1 && GP=$2
 echo "Making the datafiles for $3" && echo "" &&
-./sympow -rewarp && ./sympow -shell1 "$3" &&
-./sympow -shell1 "$3" | $SH &&
+sympow -rewarp && sympow -shell1 "$3" &&
+sympow -shell1 "$3" | $SH &&
 echo 'Running the gp script' && echo "" &&
-./sympow -pari "$3" &&
-./sympow -pari "$3" | $GP -q > /dev/null && echo "" &&
-./sympow -shell2 "$3" &&
-./sympow -shell2 "$3" | $SH &&
-./sympow -rewarp && echo "Finished with $3"
+sympow -pari "$3" &&
+sympow -pari "$3" | $GP -q > /dev/null && echo "" &&
+sympow -shell2 "$3" &&
+sympow -shell2 "$3" | $SH &&
+sympow -rewarp && echo "Finished with $3"

--- a/script/build
+++ b/script/build
@@ -13,7 +13,7 @@ VENDOR_DIR = os.path.join(SOURCE_ROOT, 'vendor')
 TARGETS = ['chromiumcontent_all']
 COMPONENTS = ['static_library', 'shared_library', 'ffmpeg']
 
-NINJA = os.path.join(VENDOR_DIR, 'depot_tools', 'ninja')
+NINJA = 'ninja'
 if sys.platform == 'win32':
   NINJA = '{0}.exe'.format(NINJA)
 
--- a/script/create-dist
+++ b/script/create-dist
@@ -29,7 +29,7 @@
 MAIN_DIR = os.path.join(DIST_DIR, 'main')
 DIST_SRC_DIR = os.path.join(MAIN_DIR, 'src')
 
-NINJA = os.path.join(VENDOR_DIR, 'depot_tools', 'ninja')
+NINJA = 'ninja'
 if sys.platform == 'win32':
   NINJA = '{0}.exe'.format(NINJA)
 
--- a/script/update
+++ b/script/update
@@ -58,10 +58,10 @@ def main():
   git_cache = args.git_cache or os.getenv('LIBCHROMIUMCONTENT_GIT_CACHE', '')
   gclient_sync(chromium_version(), args.clean, git_cache)
 
-  if sys.platform == 'linux2':
-    install_sysroot()
-  elif sys.platform in ['win32', 'cygwin']:
-    update_toolchain_json()
+  # if sys.platform == 'linux2':
+  #   install_sysroot()
+  # elif sys.platform in ['win32', 'cygwin']:
+  #   update_toolchain_json()
 
   target_arch = args.target_arch
   if target_arch == 'arm64':
@@ -69,7 +69,6 @@ def main():
 
   return (apply_patches() or
           copy_chromiumcontent_files() or
-          update_clang() or
           run_gn(target_arch, args.defines))
 
 
@@ -205,7 +204,7 @@ def run_gn(target_arch, defines):
   if sys.platform in ['win32', 'cygwin']:
     gn = os.path.join(SRC_DIR, 'buildtools', 'win', 'gn.exe')
   elif sys.platform == 'linux2':
-    gn = os.path.join(SRC_DIR, 'buildtools', 'linux64', 'gn')
+    gn = os.path.join(SRC_DIR, 'out', 'Release', 'gn')
   elif sys.platform == 'darwin':
     gn = os.path.join(SRC_DIR, 'buildtools', 'mac', 'gn')
 

# Maintainer: Bruno Pagani (a.k.a. ArchangeGabriel) <archange@archlinux.org>
# Contributor: Luca Weiss <luca (at) z3ntu (dot) xyz>

pkgbase=riot
pkgname=('riot-desktop' 'riot-web')
pkgver=0.13.4
pkgrel=1
pkgdesc="A glossy Matrix collaboration client, web and desktop versions."
arch=('any')
url="https://riot.im"
_url="https://github.com/vector-im/riot-web"
license=('Apache')
makedepends=('npm' 'git' 'phantomjs')
source=(${pkgbase}-${pkgver}.tar.gz::"${_url}/archive/v${pkgver}.tar.gz"
        ${pkgbase}-${pkgver}.tar.gz.asc::"${_url}/releases/download/v${pkgver}/v${pkgver}-src.tar.gz.asc"
        "${pkgbase}.desktop"
        "${pkgbase}-desktop.sh")
sha256sums=('c1b63eae4a322a94f3cfd9d9dae0dc9067686cf3f6dfdb621e6e5bb3fbbd6d70'
            'SKIP'
            '043fbaa29be96f52541143e1684fd7ba33585edb215c06d1ed4e59ddc48a9fa7'
            'cb7304188845e3be24966b3a8bca5763f4d1b0055a0afa1a17a60917556caaf0')
validpgpkeys=('6FEB6F83D48B93547E7DFEDEE019645248E8F4A1') # riot.im (Package Signing key) <packages@riot.im>

prepare() {
  cd ${pkgbase}-web-${pkgver}
  sed -i 's@https://riot.im/download/desktop/update/@null@g' electron_app/riot.im/config.json
}

build() {
  cd ${pkgbase}-web-${pkgver}
  npm install --cache ../npm-cache
  npm run build --cache ../npm-cache
}

package_riot-web() {
  pkgdesc="A glossy Matrix collaboration client for the web."
  provides=('vector-web')  # @vith
  replaces=('vector-web')  # @vith
  cd ${pkgbase}-web-${pkgver}

  install -d "${pkgdir}"/{usr/share/webapps,etc/webapps}/${pkgbase}

  cp -r webapp/* "${pkgdir}"/usr/share/webapps/${pkgbase}/
  install -Dm644 config.sample.json -t "${pkgdir}"/etc/webapps/${pkgbase}/
  ln -s /etc/webapps/${pkgbase}/config.json "${pkgdir}"/usr/share/webapps/${pkgbase}/
  echo "${pkgver}" > "${pkgdir}"/usr/share/webapps/${pkgbase}/version
}

package_riot-desktop() {
  pkgdesc="A glossy Matrix collaboration client for the desktop."
  depends=('riot-web' 'electron')
  backup=("etc/${pkgbase}/config.json")
  cd ${pkgbase}-web-${pkgver}

  cd electron_app
  npm install --cache "${srcdir}"/npm-cache
  cd ..

  install -d "${pkgdir}"{/usr/lib/${pkgbase}/electron_app,/etc/webapps/${pkgbase}}

  ln -s /usr/share/webapps/${pkgbase} "${pkgdir}"/usr/lib/${pkgbase}/webapp
  ln -s /etc/${pkgbase}/config.json "${pkgdir}"/etc/webapps/${pkgbase}/config.json

  install -Dm644 package.json -t "${pkgdir}"/usr/lib/${pkgbase}
  cp -r electron_app/src "${pkgdir}"/usr/lib/${pkgbase}/electron_app/
  cp -r electron_app/node_modules "${pkgdir}"/usr/lib/${pkgbase}/electron_app/
  install -Dm644 electron_app/img/riot.png -t "${pkgdir}"/usr/lib/${pkgbase}/electron_app/img
  install -Dm644 electron_app/riot.im/config.json -t "${pkgdir}"/etc/${pkgbase}

  install -Dm644 "${srcdir}"/${pkgbase}.desktop "${pkgdir}"/usr/share/applications/${pkgbase}.desktop
  install -Dm755 "${srcdir}"/${pkgname}.sh "${pkgdir}"/usr/bin/${pkgname}

  install -Dm644 src/skins/vector/img/logos/${pkgbase}-logo.svg "${pkgdir}"/usr/share/icons/hicolor/scalable/apps/${pkgbase}.svg
  for i in 16 24 48 64 96 128 256 512; do
    install -Dm644 electron_app/build/icons/${i}x${i}.png "${pkgdir}"/usr/share/icons/hicolor/${i}x${i}/apps/${pkgbase}.png
  done
}

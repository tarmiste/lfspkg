# Maintainer: Sven-Hendrik Haase <sh@lutzhaase.com>
# Contributor: carstene1ns <arch carsten-teibes de> - http://git.io/ctPKG
# Contributor: Stefan Husmann <stefan-husmann@t-online.de>
# Contributor: Vlad Kolotvin <vlad.kolotvin@gmail.com>

pkgname=emscripten
pkgver=1.37.28
pkgrel=1
pkgdesc="LLVM-based project that compiles C and C++ into highly-optimizable JavaScript for the web"
arch=('x86_64')
url="http://emscripten.org"
license=('custom')
depends=('nodejs' 'python' 'python2')
makedepends=('cmake' 'libxml2')
optdepends=('java-environment: for using clojure'
            'ruby: for using websockify addon')
install=$pkgname.install
source=(emscripten-$pkgver.tar.gz::"https://github.com/kripken/emscripten/archive/$pkgver.tar.gz"
        emscripten-fastcomp-$pkgver.tar.gz::"https://github.com/kripken/emscripten-fastcomp/archive/$pkgver.tar.gz"
        emscripten-fastcomp-clang-$pkgver.tar.gz::"https://github.com/kripken/emscripten-fastcomp-clang/archive/$pkgver.tar.gz"
        "emscripten.sh")
sha512sums=('3179ca2151ce5296abf3cca242f7c5d4aadd4d74560737ad914e17c7cbfb5d5ff49c580a569ea54f53eae54251a32ca0325da2ac235d8a5e88209815834f43b4'
            '6e40b12f0afa498ed8b76dacff0a7a2a7ba54a210706e891a18c48c0e24532bbb56f4b99a7b94014b7e4dbee0d9faec28d7c0d4f16a41256179a3c85a70ff432'
            'd65c6df48f4f1406c62bf627cc3d1786e317369866c57677f2fa42068523d26e82cc66996150f2219b0187e04e857205367a963cfbaec227d9e5a492e9ccc352'
            '52007717c21c22f5d9f027268de2516e969f2ffb8e37121f75ca2697b7ddcde6c0be9636d19df7b3c2e89bc769f5361750c62f9fcb84d224cde3c8626bc9c93b')

prepare() {
  cd emscripten-fastcomp-$pkgver

  # reset folder for out-of-source build
  rm -rf build
  mkdir build

  # put clang source into the right place (http://git.io/i1GBkg)
  rm -rf tools/clang
  ln -s "$srcdir"/emscripten-fastcomp-clang-$pkgver tools/clang

  # python2 shebang fixes
  cd ../emscripten-$pkgver
  sed '1s|python$|python2|' -i $(find third_party tools -name \*.py) emrun

  # adapt config file template to use our custom environment variable and path
  sed -e "s|getenv('LLVM')|getenv('EMSCRIPTEN_FASTCOMP')|" \
    -e 's|{{{ LLVM_ROOT }}}|/usr/lib/emscripten-fastcomp|' \
    -i tools/settings_template_readonly.py
}

build() {
  cd emscripten-fastcomp-$pkgver/build

  CC=gcc CXX=g++ cmake .. -DPYTHON_EXECUTABLE=/usr/bin/python2 \
    -DCMAKE_BUILD_TYPE=Release \
    -DCMAKE_SKIP_RPATH=YES \
    -DLLVM_TARGETS_TO_BUILD="X86;JSBackend" \
    -DLLVM_BUILD_RUNTIME=OFF \
    -DLLVM_INCLUDE_EXAMPLES=OFF \
    -DLLVM_INCLUDE_TESTS=OFF \
    -DCLANG_INCLUDE_TESTS=OFF
  make
}

package() {
  # exported variables
  install -Dm755 "$srcdir"/emscripten.sh "$pkgdir"/etc/profile.d/emscripten.sh

  # LLVM-backend, TODO: include only needed tools
  cd "$srcdir"/emscripten-fastcomp-$pkgver
  install -Dm644 emscripten-version.txt "$pkgdir"/usr/lib/emscripten-fastcomp/emscripten-version.txt
  install -m755 build/bin/* "$pkgdir"/usr/lib/emscripten-fastcomp

  # copy structure
  cd "$srcdir"/emscripten-$pkgver
  install -d "$pkgdir"/usr/lib/emscripten
  cp -rup em* cmake site src system third_party tools "$pkgdir"/usr/lib/emscripten

  # remove clutter
  rm "$pkgdir"/usr/lib/emscripten-fastcomp/{*-test,llvm-lit}
  rm "$pkgdir"/usr/lib/emscripten/*.bat

  # docs
  install -d "$pkgdir"/usr/share/doc
  ln -s /usr/lib/emscripten/site/source/docs "$pkgdir"/usr/share/doc/$pkgname

  # license
  install -Dm644 LICENSE "$pkgdir"/usr/share/licenses/$pkgname/LICENSE
}

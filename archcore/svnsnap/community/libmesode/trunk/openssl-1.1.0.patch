diff --git a/configure.ac b/configure.ac
index 6d19f2e..9799ea3 100644
--- a/configure.ac
+++ b/configure.ac
@@ -35,18 +35,28 @@ PARSER_LIBS=$expat_LIBS
 AC_ARG_ENABLE([tls],
     [AS_HELP_STRING([--disable-tls], [disable TLS support])])
 
+openssl=no
 if test "x$enable_tls" != xno; then
     PKG_CHECK_MODULES([openssl], [openssl],
-        [PC_REQUIRES="openssl ${PC_REQUIRES}"],
+        [PC_REQUIRES="openssl ${PC_REQUIRES}"
+        openssl=yes],
         [AC_CHECK_HEADER([openssl/ssl.h],
             [
                 openssl_LIBS="-lssl -lcrypto"
                 PC_LIBS="${openssl_LIBS} ${PC_LIBS}"
+                openssl=yes
             ],
             [AC_MSG_ERROR([openssl not found; openssl required])]
         )])
 fi
 
+if test "x$openssl" == xyes; then
+    AC_SEARCH_LIBS(X509_get0_tbs_sigalg,
+        [ssl crypto],
+        AC_DEFINE([HAVE_X509_GET0_TBS_SIGALG])
+    )
+fi
+
 AC_SEARCH_LIBS([socket], [socket])
 
 AS_CASE([$PLATFORM],
diff --git a/src/tls_openssl.c b/src/tls_openssl.c
index 3118adc..422abad 100644
--- a/src/tls_openssl.c
+++ b/src/tls_openssl.c
@@ -168,7 +168,11 @@ static struct _tlscert_t *_x509_to_tlscert(xmpp_ctx_t *ctx, X509 *cert)
 	}
 
     tlscert->keyalg = NULL;
+#ifndef HAVE_X509_GET0_TBS_SIGALG
 	int alg_nid = OBJ_obj2nid(cert->cert_info->key->algor->algorithm);
+#else
+	int alg_nid = OBJ_obj2nid(X509_get0_tbs_sigalg(cert)->algorithm);
+#endif /* HAVE_X509_GET0_TBS_SIGALG */
 	if (alg_nid != NID_undef) {
         const char* keyalg = OBJ_nid2ln(alg_nid);
         if (keyalg) {
@@ -177,7 +181,11 @@ static struct _tlscert_t *_x509_to_tlscert(xmpp_ctx_t *ctx, X509 *cert)
     }
 
     tlscert->sigalg = NULL;
+#ifndef HAVE_X509_GET0_TBS_SIGALG
 	alg_nid = OBJ_obj2nid(cert->sig_alg->algorithm);
+#else
+        alg_nid = OBJ_obj2nid(X509_get0_tbs_sigalg(cert)->algorithm);
+#endif /* HAVE_X509_GET0_TBS_SIGALG */
 	if (alg_nid != NID_undef) {
         const char* sigalg = OBJ_nid2ln(alg_nid);
         if (sigalg) {

--- src/bin/sage-env.orig	2015-01-06 10:46:04.469687605 +0100
+++ src/bin/sage-env	2015-01-06 10:49:59.547762019 +0100
@@ -111,41 +111,7 @@
 }
 
 
-# New value for SAGE_ROOT: either SAGE_ROOT (if given)
-# or a guessed value based on pwd.
-if [ -n "$SAGE_ROOT" ]; then
-    NEW_SAGE_ROOT="$SAGE_ROOT"
-elif [ -f sage -a -d build ]; then
-    NEW_SAGE_ROOT="."
-elif [ -f ../../sage -a -d ../../build ]; then
-    NEW_SAGE_ROOT="../.."
-else
-    # No idea what SAGE_ROOT should be...
-    echo >&2 "Error: You must set the SAGE_ROOT environment variable or run this"
-    echo >&2 "script from the SAGE_ROOT or SAGE_ROOT/local/bin/ directory."
-    return 1
-fi
-
-# Make NEW_SAGE_ROOT absolute
-NEW_SAGE_ROOT=`cd "$NEW_SAGE_ROOT" && pwd -P`
-
-# Sanity check NEW_SAGE_ROOT
-if [ -f "$NEW_SAGE_ROOT/sage" -a -d "$NEW_SAGE_ROOT/build" ]; then
-    :
-else
-    echo >&2 "Error: SAGE_ROOT is set to a bad value:"
-    echo >&2 "SAGE_ROOT=$SAGE_ROOT"
-    echo >&2 "You must correct it or erase it and run this script from the SAGE_ROOT"
-    echo >&2 "or SAGE_ROOT/local/bin/ directory."
-    return 1
-fi
-
-# Warn if NEW_SAGE_ROOT does not equal the old SAGE_ROOT
-if [ "$SAGE_ROOT" != "$NEW_SAGE_ROOT" -a -n "$SAGE_ROOT" ]; then
-    echo >&2 "Warning: overwriting SAGE_ROOT environment variable:"
-    echo >&2 "Old SAGE_ROOT=$SAGE_ROOT"
-    echo >&2 "New SAGE_ROOT=$NEW_SAGE_ROOT"
-fi
+NEW_SAGE_ROOT="/usr"
 
 # Display the Sage startup banner, used in src/bin/sage
 sage_banner() {
@@ -185,6 +185,7 @@
 export SAGE_ENV_SOURCED=$SAGE_ENV_VERSION
 
 export SAGE_ROOT="$NEW_SAGE_ROOT"
+export SAGE_LOCAL='/usr'
 
 
 # sage-env must know where the Sage's script files are.
@@ -307,8 +307,9 @@
 export SAGE_EXTCODE="$SAGE_SHARE/sage/ext"
 export SAGE_SPKG_INST="$SAGE_LOCAL/var/lib/sage/installed"
 export SAGE_LOGS="$SAGE_ROOT/logs/pkgs"
-export SAGE_SRC="$SAGE_ROOT/src"
-export SAGE_DOC_SRC="$SAGE_SRC/doc"
+export GAP_ROOT_DIR="/usr/lib/gap"
+export SAGE_SRC="$SAGE_SHARE/sage/source"
+export SAGE_DOC_SRC="$SAGE_SHARE/doc/sage"
 export SAGE_DOC="$SAGE_SHARE/doc/sage"
 
 if [ -z "${SAGE_ORIG_PATH_SET}" ]; then
@@ -414,6 +414,9 @@
     export SAGE_STARTUP_FILE
 fi
 
+export LIBMTX="$DOT_SAGE/meataxe"
+[[ -d $LIBMTX ]] || mkdir -p $LIBMTX # Create meataxe data dir
+
 if [ "$PYTHON_EGG_CACHE" = "" ]; then
     PYTHON_EGG_CACHE="$DOT_SAGE/.python-eggs"
     export PYTHON_EGG_CACHE
@@ -499,7 +499,6 @@
         fi
     fi
 fi
-export MAXIMA_PREFIX="$SAGE_LOCAL"
 
 PERL5LIB="$SAGE_LOCAL/lib/perl5:$PERL5LIB" && export PERL5LIB
 
@@ -619,9 +619,6 @@
     LD_LIBRARY_PATH="$SAGE_LOCAL/bin:$LD_LIBRARY_PATH" && export LD_LIBRARY_PATH
 fi
 
-# See trac 7186 -- this is needed if ecl is moved
-ECLDIR="$SAGE_LOCAL/lib/ecl/" && export ECLDIR
-
 # Handle parallel building/testing/...
 # See Trac Ticket #12016
 # First, figure out the right values for SAGE_NUM_THREADS (default
--- src/sage/env.py.orig       2017-12-07 19:51:25.554281539 +0000
+++ src/sage/env.py    2017-12-07 19:51:42.787654650 +0000
@@ -117,8 +117,8 @@
 _add_variable_or_fallback('LOCAL_IDENTIFIER','$HOSTNAME.%s'%os.getpid())
 
 # bunch of sage directories and files
-_add_variable_or_fallback('SAGE_ROOT',       None)
-_add_variable_or_fallback('SAGE_LOCAL',      None)
+_add_variable_or_fallback('SAGE_ROOT',       '')
+_add_variable_or_fallback('SAGE_LOCAL',      '/usr')
 _add_variable_or_fallback('SAGE_ETC',        opj('$SAGE_LOCAL', 'etc'))
 _add_variable_or_fallback('SAGE_INC',        opj('$SAGE_LOCAL', 'include'))
 _add_variable_or_fallback('SAGE_SHARE',      opj('$SAGE_LOCAL', 'share'))


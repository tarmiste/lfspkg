#!/bin/sh
########################################################################
# Begin /sbin/ifup
#
# Description : Interface Up
#
# Authors     : Nathan Coulson - nathan@linuxfromscratch.org
#               Kevin P. Fleming - kpfleming@linuxfromscratch.org
# Update      : Bruce Dubbs - bdubbs@linuxfromscratch.org
#
# Version     : LFS 7.7
#
# Notes       : The IFCONFIG variable is passed to the SERVICE script
#               in the /lib/services directory, to indicate what file the
#               service should source to get interface specifications.
#
########################################################################

up()
{
  if ip link show $1 &gt; /dev/null 2&gt;&amp;1; then
     link_status=`ip link show $1`

     if [ -n &quot;${link_status}&quot; ]; then
        if ! echo &quot;${link_status}&quot; | grep -q UP; then
           ip link set $1 up
        fi
     fi

  else
     log_failure_msg &quot;\nInterface ${IFACE} doesn&apos;t exist.&quot;
     exit 1
  fi
}

RELEASE=&quot;7.7&quot;

USAGE=&quot;Usage: $0 [ -hV ] [--help] [--version] interface&quot;
VERSTR=&quot;LFS ifup, version ${RELEASE}&quot;

while [ $# -gt 0 ]; do
   case &quot;$1&quot; in
      --help | -h)     help=&quot;y&quot;; break ;;

      --version | -V)  echo &quot;${VERSTR}&quot;; exit 0 ;;
   
      -*)              echo &quot;ifup: ${1}: invalid option&quot; &gt;&amp;2
                       echo &quot;${USAGE}&quot; &gt;&amp; 2
                       exit 2 ;;
                       
      *)               break ;;
   esac
done

if [ -n &quot;$help&quot; ]; then
   echo &quot;${VERSTR}&quot;
   echo &quot;${USAGE}&quot;
   echo
   cat &lt;&lt; HERE_EOF
ifup is used to bring up a network interface.  The interface
parameter, e.g. eth0 or eth0:2, must match the trailing part of the
interface specifications file, e.g. /etc/sysconfig/ifconfig.eth0:2.

HERE_EOF
   exit 0
fi

file=/etc/sysconfig/ifconfig.${1}

# Skip backup files
[ &quot;${file}&quot; = &quot;${file%&quot;&quot;~&quot;&quot;}&quot; ] || exit 0

. /lib/lsb/init-functions

log_info_msg &quot;Bringing up the ${1} interface... &quot;

if [ ! -r &quot;${file}&quot; ]; then
   log_failure_msg2 &quot;${file} is missing or cannot be accessed.&quot; 
   exit 1
fi

. $file

if [ &quot;$IFACE&quot; = &quot;&quot; ]; then
   log_failure_msg2 &quot;${file} does not define an interface [IFACE].&quot;
   exit 1
fi

# Do not process this service if started by boot, and ONBOOT
# is not set to yes
if [ &quot;${IN_BOOT}&quot; = &quot;1&quot; -a &quot;${ONBOOT}&quot; != &quot;yes&quot; ]; then
   log_skip_msg
   exit 0
fi

for S in ${SERVICE}; do
  if [ ! -x &quot;/lib/services/${S}&quot; ]; then
    MSG=&quot;\nUnable to process ${file}.  Either &quot; 
    MSG=&quot;${MSG}the SERVICE &apos;${S} was not present &quot;
    MSG=&quot;${MSG}or cannot be executed.&quot;
    log_failure_msg &quot;$MSG&quot;
    exit 1
  fi
done

if [ &quot;${SERVICE}&quot; = &quot;wpa&quot; ]; then log_success_msg; fi

# Create/configure the interface
for S in ${SERVICE}; do 
  IFCONFIG=${file} /lib/services/${S} ${IFACE} up
done

# Bring up the interface and any components
for I in $IFACE $INTERFACE_COMPONENTS; do up $I; done

# Set MTU if requested. Check if MTU has a &quot;good&quot; value.
if test -n &quot;${MTU}&quot;; then
   if [[ ${MTU} =~ ^[0-9]+$ ]] &amp;&amp; [[ $MTU -ge 68 ]] ; then
      for I in $IFACE $INTERFACE_COMPONENTS; do 
         ip link set dev $I mtu $MTU; 
      done
   else
      log_info_msg2 &quot;Invalid MTU $MTU&quot;
   fi
fi 

# Set the route default gateway if requested
if [ -n &quot;${GATEWAY}&quot; ]; then
   if ip route | grep -q default; then
      log_skip_msg &quot;\n     Gateway already setup; skipping.&quot;
   else
      log_info_msg &quot;Setting up default gateway...&quot;
      ip route add default via ${GATEWAY} dev ${IFACE}
      evaluate_retval
   fi
fi

# End /sbin/ifup
